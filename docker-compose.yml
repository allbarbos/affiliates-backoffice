version: "3"

services:
  front:
    build:
      context: frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      kong:
        condition: service_healthy

  kong:
    build:
      context: api-gateway
      dockerfile: Dockerfile
    environment:
      KONG_DATABASE: "off"
      KONG_PROXY_ACCESS_LOG: "off"
      KONG_LOG_LEVEL: info
      KONG_PLUGINS: bundled
      KONG_DECLARATIVE_CONFIG: /tmp/kong.yaml
    ports:
      - "8000:8000"
    restart: on-failure
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 15s
    depends_on:
      api:
        condition: service_healthy

  api:
    build:
      context: backend
      dockerfile: build/Dockerfile.api
    env_file: backend/.env
    healthcheck:
      test: wget http://localhost:3001/health || exit 1
      interval: 20s
      timeout: 10s
      retries: 5
      start_period: 10s
    depends_on:
      db:
        condition: service_healthy
  
  worker:
    build:
      context: backend
      dockerfile: build/Dockerfile.worker
    env_file: backend/.env
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=backoffice_db
    ports:
      - '5432:5432'
    volumes: 
      - /pgdt:/var/lib/postgresql/data
      - ./backend/internal/database/sql/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  devportal:
    image: swaggerapi/swagger-ui
    ports:
      - '9002:8080'
    volumes: 
      - ./openapi.yaml:/tmp/openapi.yaml
    environment:
      SWAGGER_JSON: /tmp/openapi.yaml
